MySQL DB --> 3306 port number
Backend  --> 8080
Frontend --> 80 


DB SG Rule
---------------------
Don't give 0.0.0.0/0 or vpc CIDR --> in MySQL 3306

Should be like this: Allow traffic on 3306 from the instance which are attached to expense-dev-backend-sg

SSM:  provides secure, hierarchical storage for configuration data management and secrets management.
--> Why we need SSM (Systems Manager) -> AWS --> Parameter Store --> Create

Use:
We have 01_VPC, 02_SG to get data from 1 -> Like VPC_ID, Subnet_ID Store in SSM

RDS ----------------------
RDS, DB, Backend Do not have Public Connection, Then how can we test the Connection, to access / to trouble shoot issues..

Use below
Bastion/Jump Host -----------------------
We will create one EC2 instance in public subnet, Bastion host

Allow backend servers & DB servers to connect from bastion host

User (Connects)--> Bastion Host (Can Access)--> Frontend, Backend, DB

Ansible -----------------
From Ansible to Frontend, Backend Connection need? Allow SSH 22-port

RDS is Completely managed by AWS, And it dosen't give SSH access, and we only Completely manage by Console, and no SSH Access

User (Connects)--> Ansible (Can Access)--> Frontend, Backend


--------------------------------
Need to have this Visuvalisation
1--> Expose output from module
2 --> Next catch them from VPC and push them in SSM Parameter
3 --> Refere that that is pushed

24TH MAY
-----------------------------------
To create instances (From front)
for i in 01-vpc/ 02-sg/ 03-bastion/ 04-db/ ; do cd $i ; terraform apply -auto-approve; cd .. ; done

To delete (From Back) ---> ls -dr */ (To get files in Reverse Order)
for i in $(ls -dr */) ; do cd $i{i%/}; done  --> Checking
for i in $(ls -dr */) ; do echo ${i%/}; cd ${i%/} ; terraform destroy -auto-approve ; cd .. ; done


------------------------
Connecting to Backend via bastionHost
1) Take public IP of expense-dev-bastion
2) Go to putty login
3) sudo dnf install mysql
4) telnet endpoint(Copy from RDS) 3306
5) mysql -h endpoint -u root -pExpenseApp1
6) mysql> show databases;
7) use transactions;
8) show tables